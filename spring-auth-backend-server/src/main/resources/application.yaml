
spring:
  application:
    name: auth-service
  messages:
    basename: messages,errors
  datasource:
    url: jdbc:postgresql://database-1.cyykxhwims2n.ap-northeast-2.rds.amazonaws.com:5432/postgres?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    hikari:
      username: postgres
      password: mypassword
      maximum-pool-size: 70


  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        use-new-id-generator-mappings: true
        order_inserts: true
        ddl-auto: update
        format_sql: true
        jdbc:
          time_zone: UTC
          batch_size: 50

  kafka:
    bootstrap-servers: localhost:8097,localhost:8098,localhost:8099
    topic-user-change: user-change


server:
  tomcat:
    accept-count: 1000
    connection-timeout: 10s
    threads:
      max: 1200
    max-connections: 10000
    max-swallow-size: 2MB
  servlet:
    session:
      tracking-modes: cookie
  port: 8080

eureka:
  instance:
    # ${spring.cloud.client.hostname} = 호스트 ip 주소 반환
    # 유레카 instance-id, spring.application.instance_id 가 설정되어 있지 않으면 application-name::server-port 로 자동으로 유레카에 설정된다.
    # 외부 포트 노출을 막기 위한 방법으로 컬리브레이스로 random.value 를 사용한다.
    # Note: The syntax ${x:${y}} is Spring property shorthand for ${x} != null ? ${x} : ${y}
    # 즉, 컬리 브레이스 내부 if 문법을 통해 instance_id가 null일 떄, random.value로 설정하도록 한다.
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # 유레카 디스커버리 서버의 위치
      defaultZone: http://127.0.0.1:8761/eureka
